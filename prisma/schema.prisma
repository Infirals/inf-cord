datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// User Profile DataBase
model Profile{
  id String @id @default(uuid())
  userID String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text

  servers Server[] 
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Server Profile DataBase
model Server {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @db.Text

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

// Members Role
enum MemberRole {
  ADMIN
  HEAD_MODERATOR
  MODERATOR
  NEWBIE
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(NEWBIE)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

// Creating Channel Type Database
enum ChannelType {
  TEXT 
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(uuid())
  name  String
  type ChannelType @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}
